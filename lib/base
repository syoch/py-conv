#pragma once
#ifndef __BASE_H__
#define __BASE_H__

#include <map>    // Dict
#include <string> // str
#include <any>    // Other
#include <utility>

#define str std::string
class Any: public std::any{
    using std::any::any;

public:
    str toStr(){
        if(type() == typeid(str)){
            return std::any_cast<str>(*this);
        }else if(type() == typeid(char*)){
            return str(std::any_cast<char*>(*this));
        }else if(type() == typeid(const char*)){
            return str(std::any_cast<const char*>(*this));
        }else{
            throw str("Unknown Type")+str(type().name());
        }
    }
    const char* toString(){
        static str tmp = toStr();
        return tmp.c_str();
    }
};

#endif